import pygame
import random
import winsound
pygame.init()

screen = pygame.display.set_mode((800, 600))
pygame.display.set_caption("Flappy Bird")
clock = pygame.time.Clock()
font = pygame.font.Font(None, 36)
font2 = pygame.font.Font(None, 72)
pipe_image = pygame.image.load('pipe.png').convert_alpha()
background_image = pygame.image.load('background.png').convert_alpha()
bird_image = pygame.image.load('bird.png').convert_alpha()

score = 0
sound = pygame.mixer.Sound("jump.wav")

bg_x1 = 0
bg_x2 = 800
frameWidth = 30
frameHeight = 32
rowNum = 0
frameNum = 0
ticker = 0

class Bird:
    def __init__(self):
        self.y = 400
        self.velocity = 0

    def flap(self):
        self.velocity = -3

    def physics(self):
        self.velocity += 0.1
        self.y += self.velocity

    def draw(self):
        bird_image

bird = Bird()


class Pipe:
    def __init__(self, x):
        self.x = x
        self.height = random.randint(50, 400)
        self.gap = 150
        self.top_pipe = pygame.transform.flip(pipe_image, False, True)
        self.bottom_pipe = pipe_image

    def move(self):
        self.x -= 2

    def draw(self):
        top_height = self.height
        bottom_height = 800 - (self.height + self.gap)
        #top pipe
        screen.blit(self.top_pipe, (self.x, top_height - self.top_pipe.get_height()))
        #bottom pipe
        screen.blit(self.bottom_pipe, (self.x, self.height + self.gap))

pipes = []
spawn_pipe = 0
        
def check_collision(bx, by, px, py):
    #top pipe check
    if bx + 20 > px and bx < px + 45 and by < py:
        return True
    #bottom pipe check
    if bx + 20 > px and bx < px + 45 and by + 30 > py + 150:
        return True
    return False

ticker = 0
running = True
while running: #======================Game Loop+++++++++++++++++++++++++++++++++++++++++
    clock.tick(60)
    ticker += 1
    if ticker%10 == 0:
        ticker = 0
        score += 1
    #print(score)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN:
            bird.flap()
            sound.play()

            
    print(frameNum)

            


    bird.physics()

    spawn_pipe += 1
    if spawn_pipe >= 150:
        pipes.append(Pipe(800))
        spawn_pipe = 0

    for pipe in pipes:
        pipe.move()
        if check_collision(50, bird.y, pipe.x, pipe.height):
            running = False

    i = len(pipes) - 1
    while i >= 0:
        if pipes[i].x <= - 50:
            pipes.pop(i)
        i -= 1

    #render section---------------------------------------
    screen.fill((135, 206, 235))
    screen.blit(background_image, (0, 0))
    
    

    bg_x1 -= 2
    bg_x2 -= 2

    if bg_x1 <= -800:
        bg_x1 = 800
    if bg_x2 <= -800:
        bg_x2 = 800


    screen.blit(background_image, (bg_x1, 0))
    screen.blit(background_image, (bg_x2, 0))
    score_text = font.render("Score:", True, (255, 255, 255))
    screen.blit(score_text, (650, 20))
    score_text2 = font.render(str(score), True, (255, 255, 255))
    screen.blit(score_text2, (750, 20))

 
    screen.blit(bird_image, (50, bird.y), (frameWidth*frameNum, rowNum*frameHeight, frameWidth, frameHeight))

    if ticker%6==0:
        frameNum+=1

    if frameNum > 1:
        frameNum = 0

    if rowNum == 2:
        frameNum = 0

    if ticker%12 == 0:
        rowNum += 1
    if rowNum > 2:
        rowNum = 0
    for pipe in pipes:
        pipe.draw()

    
    pygame.display.flip()
#=========end loop====================================================
text = font2.render("GAME OVER", True, (255, 50, 50))
screen.blit(text, (200, 200))
pygame.time.delay(2000)
pygame.quit()
